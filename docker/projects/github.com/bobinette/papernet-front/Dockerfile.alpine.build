FROM mhart/alpine-node:6
LABEL maintainer="rosco_pecoltran@msn.com"

## Project VCS - Info
ARG PROJECT_VCS_PROVIDER=${PROJECT_VCS_PROVIDER:-"github.com"}
ARG PROJECT_NAMESPACE=${PROJECT_NAMESPACE:-"bobinette"}
ARG PROJECT_NAME=${PROJECT_NAME:-"papernet-front"}
ARG PROJECT_VCS_BRANCH=${PROJECT_VCS_BRANCH:-master}

## Global 'ENV' variables
ENV PROJECT_VCS_PROVIDER=${PROJECT_VCS_PROVIDER} \
    PROJECT_NAMESPACE=${PROJECT_NAMESPACE} \
    PROJECT_NAME=${PROJECT_NAME}

ARG GOSU_VERSION=${GOSU_VERSION:-"1.10"}

# List of packages that need to be installed for node_modules to compile
ARG APK_PACKAGES_BUILD=${APK_PACKAGES_BUILD:-"tar git curl make gcc g++ python linux-headers paxctl libgcc libstdc++"}

# List of packages that can be removed after all dependencies are installed/compiled.
ARG APK_PACKAGES_REMOVE=${APK_PACKAGES_REMOVE:-"tar git curl make gcc g++ python linux-headers paxctl libgcc libstdc++"}

# List of additional/custom packages that need to be installed for running the container in an interactive mode.
ARG APK_PACKAGES_INTERACTIVE=${APK_PACKAGES_INTERACTIVE:-"bash nano tree"}

# List of additional/custom packages that need to be installed for node_modules to compile (eg.libjpeg,...)
ARG APK_PACKAGES_RUNTIME=${APK_PACKAGES_RUNTIME:-""}

# Simple Go-based setuid+setgid+setgroups+exec
ADD https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 /usr/local/sbin/gosu

COPY ./docker /docker

# npm cache clean
RUN apk add --update --no-cache ${APK_PACKAGES_INTERACTIVE} ${APK_PACKAGES_RUNTIME} \
    && apk --no-cache add --virtual devs ${APK_PACKAGES_BUILD} \
    && curl --silent --show-error --fail --location \
        --header "Accept: application/tar+gzip, application/x-gzip, application/octet-stream" -o - \
        "https://caddyserver.com/download/linux/amd64?plugins=http.authz,http.cors,http.expires,http.git,http.ipfilter,http.minify,http.ratelimit,http.realip,http.upload,net,tls.dns.gandi,tls.dns.googlecloud,tls.dns.linode,tls.dns.ovh,tls.dns.route53" \
        | tar --no-same-owner -C /usr/bin/ -xz caddy \
    && mv /usr/bin/caddy /usr/bin/caddy \
    && chmod 0755 /usr/bin/caddy \
    && chmod +x /usr/local/sbin/gosu \
	&& adduser -D app -h /data -s /bin/sh \
    && mkdir -p /code \    
    && git clone --recursive --depth=1 -b ${PROJECT_VCS_BRANCH:-master} https://${PROJECT_VCS_PROVIDER}/${PROJECT_NAMESPACE}/${PROJECT_NAME} /code \
    && cd /code \
	&& mkdir -p /code/app \
    && npm install -g -s --no-progress yarn npm-check-updates \
    && yarn install \
    && rm -fR /code/app/* \
    && yarn run build \
    && rm -fR /dist/content/* \
    && mkdir -p /dist/content \
    && cp -Rf /code/app/* /dist/content \
    && yarn cache clean \
    && cp -Rf /docker /code/docker \
    && chmod +x docker/entrypoint.sh \
    && apk --no-cache del devs

WORKDIR /code

VOLUME ["/dist"]
EXPOSE 8080

CMD ["./docker/entrypoint.sh", "build"]


