FROM alpine:3.6
LABEL maintainer="rosco_pecoltran@msn.com"

ENV caddy_version=0.10.3

ARG GOSU_VERSION=${GOSU_VERSION:-"1.10"}
ARG APK_BUILD=${APK_BUILD:-"tar curl git openssl"}
ARG APK_RUNTIME=${APK_RUNTIME:-"ca-certificates"}
ARG APK_PACKAGES_INTERACTIVE=${APK_PACKAGES_INTERACTIVE:-"bash nano tree"}

ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

ARG  NGINX_VERSION=${NGINX_VERSION:-1.10.3}
ARG  NGINX_GPG_KEYS=${NGINX_VERSION:-B0F4253373F8F6F510D42178520A9993A1C052F8}
ARG  NGINX_STICKY_MODULE_NG_VERSION=${NGINX_STICKY_MODULE_NG_VERSION:-c78b7dd79d0d}

LABEL org.label-schema.build-date="$BUILD_DATE" \
      org.label-schema.name="papernet-front" \
      org.label-schema.description="Front-end of the papernet project." \
      org.label-schema.url="https://github.com/bobinette/papernet-front" \
      org.label-schema.vcs-ref="$VCS_REF" \
      org.label-schema.vcs-url="https://github.com/bobinette/papernet-front" \
      org.label-schema.version="$VERSION" \
      org.label-schema.schema-version="1.0" \
      org.label-schema.docker.cmd="docker run --rm -ti -p 8080:8080 bobinette/papernet-front-dist:alpine-nginx" \
	  caddy_version="$caddy_version" \
	  architecture="amd64"

ADD https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 /usr/local/sbin/gosu

WORKDIR /code/app
COPY ./content /code/app/

RUN chmod +x /usr/local/sbin/gosu \
	&& apk --no-cache --no-progress add ${APK_RUNTIME} ${APK_PACKAGES_INTERACTIVE} \
	&& apk --no-cache add --virtual devs ${APK_BUILD} && \
	adduser -D app -h /code/app -s /bin/sh && \
	curl --silent --show-error --fail --location \
        --header "Accept: application/tar+gzip, application/x-gzip, application/octet-stream" -o - \
        "https://caddyserver.com/download/linux/amd64?plugins=http.authz,http.cors,http.expires,http.git,http.ipfilter,http.minify,http.ratelimit,http.realip,http.upload,net,tls.dns.gandi,tls.dns.googlecloud,tls.dns.linode,tls.dns.ovh,tls.dns.route53" \
        | tar --no-same-owner -C /usr/bin/ -xz caddy \
    && mv /usr/bin/caddy /usr/bin/caddy \
    && chmod 0755 /usr/bin/caddy \
	&& apk --no-cache --no-progress del devs

	# && mv /code/app/Caddyfile /etc/Caddyfile
	# ${APK_PACKAGES_INTERACTIVE}
	# && mv -f /code/app/index.html /code/index.html

COPY ./conf/Caddyfile /etc/Caddyfile

EXPOSE 8080 2015

CMD ["/usr/bin/caddy", "-conf", "/etc/Caddyfile"]
# docker run -d -p "2015:2015" -w /data -v /path/to/your/website:/data papernet-front:dist-latest
# /usr/bin/caddy -conf /etc/Caddyfile